@model EiSorteei.Models.PagamentoViewModel

@{
    ViewBag.Title = "Ei Sorteei";
    Layout = null;
    long IdUsuarioLogado = Model.Usuario != null ? Model.Usuario.Id : 0;
    string[] Bilhetes = Model.Bilhetes.Split(',');
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EiSorteei</title>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.1/css/all.css" integrity="sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP" crossorigin="anonymous">
    <link rel="font" href="~/Content/fonts/Amiri-Bold.ttf" />
    <link rel="font" href="~/Content/fonts/Amiri-BoldItalic.ttf" />
    <link rel="font" href="~/Content/fonts/Amiri-Italic.ttf" />
    <link rel="font" href="~/Content/fonts/Amiri-Regular.ttf" />
    <link href="~/Content/slick.css" rel="stylesheet" />
    <link rel="shortcut icon"
          href="~/Images/favicon.png"
          type="image/x-icon" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />


    <style>
        body {
            background: #1F1F1F;
        }

        #RifaEscolhida {
            background-color: rgb(37, 202, 23);
            border-radius: 24px;
            color: white;
            padding: 10px;
            text-align: center;
            height: 40px;
            width: 70px;
            margin-top: 2px;
        }

        #Bilhetes {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
        }

        .erro {
            color: red;
            display: none;
        }
    </style>

</head>

<body>

    <div style="width:80%;margin:auto; margin-top:50px; margin-bottom:50px;">
        <div class="card" style="border-radius:24px;">

            <div class="card-body">

                <div class="row">

                    <div class="col-md-6" style="width:100%;">
                        <div class="carousel form-group" style="margin-top:20px;" id="Imagens" align="center">

                            @foreach (var x in Model.Imagens)
                            {
                                <div><img src="~/Content/ImagemProdutos/@x.Caminho" alt="Imagem do Produto" style="width:80%;" class="imagem_produto" /></div>
                            }

                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="text-center row">
                                    <div class="form-group text-center col-md-6">
                                        <a href="@Url.Action("Index","Home")">
                                            <img src="~/Imagens/Cópia de Logo Verde e Branco de Curso Preparatório (1).png" alt="Logo do Site" id="brand" />
                                        </a>
                                    </div>
                                    <div class="form-group text-center col-md-6" style="margin-top:20px;">
                                        <p><strong>@Model.Produto.Nome</strong></p>
                                        <p><strong>R$ @Math.Round(Model.Produto.ValorRifa, 2)</strong></p>
                                    </div>

                                    <div class="col-md-12">
                                        <hr />
                                        <strong>Bilhetes Escolhidos:</strong>
                                        <div id="Bilhetes">
                                            @for (int x = 0; x < Bilhetes.Length; x++)
                                            {
                                                <div id="RifaEscolhida" style="margin-right:2px;">
                                                    @Bilhetes[x]
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row text-center">
                                <div class="form-group col-md-6">
                                    <p><strong>Valor Unitário: R$ @Math.Round(Model.Produto.ValorRifa, 2)</strong></p>
                                    <p><strong>Entrega: ---</strong></p>
                                </div>
                                <div class="form-group col-md-6">
                                    <p><strong>SubTotal: R$ @Math.Round(Model.Produto.ValorRifa, 2) X @Model.Bilhetes.Split(',').Count() =  R$ @Model.ValorTotal</strong></p>
                                    <p><strong>Descontos: - R$ 0,00</strong></p>
                                </div>
                            </div>
                            <h3 class="text-center">Valor Total: R$ @Model.ValorTotal</h3>
                        </div>
                    </div>

                </div>


                @if (IdUsuarioLogado == 0)
                {
                    <div class="row" id="InformacoesPessoais">

                        <div class="col-md-4" id="Login" style="margin:auto;">
                            <div class="card form-group" style="margin-top:5px;">
                                <div class="card-header">
                                    <h3 class="text-center">Fazer Login</h3>
                                </div>
                                <div class="card-body">
                                    <div class="form-group">

                                        <div class="form-group">
                                            <label class="control-label">Email</label>
                                            <input class="form-control" id="EmailLogin" />
                                            <span id="EmailLoginErro" class="erro"></span>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label">Senha</label>
                                            <input class="form-control" id="SenhaLogin" type="password" />
                                            <span class="erro" id="SenhaLoginErro"></span>
                                        </div>
                                        <div class="form-group text-center">
                                            <button class="btn btn-success" id="Entrar"><i class="fas fa-sign-in-alt"></i> Entrar</button>
                                        </div>

                                        <div class="form-group text-center">
                                            <button class="btn btn-primary" id="CriarConta"><i class="fa fa-user"></i> Criar sua conta</button>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                        <div class="col-md-12" id="CadastrarUsuario" style="display:none;">
                            <div class="card" style="margin-top:5px;">

                                <div class="card-header">
                                    <h3><i class="fa fa-user"></i> Informações Pessoais</h3>
                                </div>

                                <div class="card-body">

                                    <div class="row">

                                        <input value="@ViewBag.Produto" name="IdProduto" style="display:none;" />
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Nome</label>
                                                <input class="form-control" id="NomeLogin" />
                                                <span class="erro" id="NomeErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">SobreNome</label>
                                                <input class="form-control" id="SobreNomeLogin" />
                                                <span class="erro" id="SobreNomeErro"></span>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">

                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="control-label">Email</label>
                                                <input class="form-control" id="EmailCadastrar" />
                                                <span class="erro" id="EmailErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Telefone</label>
                                                <input class="form-control" id="TelefoneLogin" />
                                                <span class="erro" id="TelefoneErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">CPF</label>
                                                <input class="form-control" id="CPFLogin" />
                                                <span class="erro" id="CPFErro"></span>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Estado</label>
                                                <input class="form-control" id="EstadoLogin" />
                                                <span class="erro" id="EstadoErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Cidade</label>
                                                <input class="form-control" id="CidadeLogin" />
                                                <span class="erro" id="CidadeErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">

                                            <div class="form-group">
                                                <label class="control-label">Bairro</label>
                                                <input class="form-control" id="BairroLogin" />
                                                <span class="erro" id="BairroErro"></span>
                                            </div>

                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">CEP</label>
                                                <input class="form-control" id="CEPLogin" />
                                                <span class="erro" id="CEPErro"></span>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Rua</label>
                                                <input class="form-control" id="RuaLogin" />
                                                <span class="erro" id="RuaErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Número</label>
                                                <input class="form-control" id="NumeroLogin" />
                                                <span class="erro" id="NumeroErro"></span>
                                            </div>
                                        </div>

                                    </div>


                                    <div class="row">

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Senha</label>
                                                <input class="form-control" id="SenhaCadastrar" />
                                                <span class="erro" id="SenhaErro"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label">Confirmar Senha</label>
                                                <input class="form-control" id="ConfirmarLogin" />
                                                <span class="erro" id="ConfirmarErro"></span>
                                            </div>
                                        </div>

                                    </div>

                                </div>

                                <div class="card-footer">
                                    <div class="form-group">
                                        <button class="btn btn-success"><i class="fa fa-user"></i> Realizar Cadastro</button>
                                        <button class="btn btn-primary text-white" id="FazerLogin"><i class="fa fa-lock"></i> Fazer Login</button>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>

                }


                <div class="row col-md-12 row" id="UsuarioLogado" style="display:none; margin-top:5px;">

                    <div class="col-md-6" style="margin-top:5px; margin:auto;">

                        <div class="card">
                            <div class="card-header">
                                <h3><i class="fa fa-user"></i> Informações Pessoais</h3>
                            </div>
                            <div class="card-body">
                                <p><strong id="NomeLogado"></strong></p>
                                <p><strong id="EmailLogado"></strong></p>
                                <p><strong id="TelefoneLogado"></strong></p>
                                <p><strong id="CPFLogado"></strong></p>
                            </div>
                        </div>

                    </div>

                    <div class="col-md-6" style="margin-top:5px; margin:auto;">

                        <div class="card">
                            <div class="card-header">
                                <h3><i class="fas fa-map-marked-alt"></i> Informações de Entrega</h3>
                            </div>
                            <div class="card-body row">
                                <div class="col-md-6">
                                    <p><strong id="CEPLogado"></strong></p>
                                    <p><strong id="EstadoLogado"></strong></p>
                                    <p><strong id="CidadeLogado"></strong></p>
                                    <p><strong id="BairroLogado"></strong></p>
                                </div>
                                <div class="col-md-6">
                                    <p><strong id="RuaLogado"></strong></p>
                                    <p><strong id="NumeroLogado"></strong></p>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>


                <div id="Pagamento" style="margin-top:5px; @(IdUsuarioLogado==0?"display:none;":"")">
                    <div class="card">
                        <div class="card-header">
                            <h3><i class="fas fa-money-bill-alt"></i> Forma de Pagamento</h3>
                        </div>

                        <div class="card-body">

                            <div class="form-group text-center">
                                <strong>Selecione a Forma de Pagamento: </strong>
                                <div class="form-group">
                                    <input type="radio" name="FormaPagamento" checked id="FormaPagamentoCartao"/> Cartão de Crédito
                                    <input type="radio" name="FormaPagamento" id="FormaPagamentoBoleto"/> Boleto
                                </div>
                            </div>

                            <div>
                                <div id="TipoCartao" class="row">
                                    <div class="col-md-12 form-group">
                                        <strong>Número do Cartão</strong>
                                        <input type="text" class="form-control" placeholder="Digite o número do seu cartão" id="NumeroCartao" />
                                        <span class="erro" id="ErroNumero">Campo Obrigatório</span>
                                    </div>

                                    <div class="col-md-6 form-group">
                                        <strong>Nome do Titular</strong>
                                        <input type="text" class="form-control" placeholder="Digite o nome do Titulo do Cartão" id="TituloCartao" />
                                        <span class="erro" id="ErroTitulo">Campo Obrigatório</span>
                                    </div>

                                    <div class="col-md-6 form-group">
                                        <strong>CPF</strong>
                                        <input type="text" class="form-control" placeholder="Digite o CPF do dono do Cartão" id="CPFCartao" />
                                        <span class="erro" id="ErroCPF">Campo Obrigatório</span>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <strong>Data de Vencimento</strong>
                                        <input type="text" class="form-control" placeholder="Digite a data de Vencimento do Cartão, Ex: 11/@DateTime.Now.Year.ToString()[2]@DateTime.Now.Year.ToString()[3]" id="DataCartao" />
                                        <span class="erro" id="ErroData">Campo Obrigatório</span>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <strong>CVV</strong>
                                        <input type="text" class="form-control" placeholder="Digite o nome do Titulo do Cartão" maxlength="3" id="CVVCartao" />
                                        <span class="erro" id="ErroCVV">Campo Obrigatório</span>
                                    </div>

                                    <div class="form-group col-md-12">
                                        <strong>Código do Vendedor</strong>
                                        <input type="text" class="form-control" placeholder="Digite o Código do Vendedor" maxlength="8" id="CodigoVendedor" />
                                        <span class="erro" id="ErroVendedor"></span>
                                    </div>
                                </div>

                                <div id="TipoBoleto" class="form-group" style="margin-left:20px; display:none;">
                                    <p><strong>Clique em "Efetuar Pagamento" para gerar seu boleto.</strong></p>
                                    <p><strong>Informações sobre o pagamento via boleto:</strong></p>
                                    <ul>
                                        <li>Valor à vista R$ @Model.ValorTotal</li>
                                        <li>Não pode ser parcelado! Use cartão de crédito para parcelar sua compra</li>
                                        <li>Fique atento a prazo de vencimento do seu boleto</li>
                                    </ul>
                                </div>
                                
                            </div>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-success" id="EfetuarPagamento"><i class="fas fa-shopping-cart"></i> Efetuar Pagamento</button>
                        </div>
                    </div>
                </div>


            </div>

        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://cdn.ckeditor.com/4.14.1/standard/ckeditor.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.6/dist/jquery.fancybox.min.js"></script>
    <script src="~/js/slick.min.js"></script>
    <script src="~/js/site.js"></script>
    <script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
    <script type="text/javascript" src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
    <script src="https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.0/jquery.mask.js"></script>
    <script>

        $(document).ready(function () {


            let TipoPagamento = "Cartão de Crédito";

            $("#CPFCartao").mask("000.000.000-00");
            $("#DataCartao").mask("00/00");
            $("#CVVCartao").mask("000");

            $('.carousel').slick({
                autoplay: true,
                autoplaySpeed: 4000,
                nextArrow: '#next',
                prevArrow: '#prev'
            });

            $("#CriarConta").click(function () {

                $("#Login").slideUp(200);
                $("#CadastrarUsuario").slideDown(200);

            });

            $("#FazerLogin").click(function () {

                $("#CadastrarUsuario").slideUp(200);
                $("#Login").slideDown(200);

            });


            $("#Entrar").click(function () {

                let erro = false;

                if (!$("#EmailLogin").val()) {

                    erro = true;
                    $("#EmailLoginErro").text("Por favor preencha o seu email");
                    $("#EmailLoginErro").css("display", "block");
                }

                else {
                    $("#EmailLoginErro").css("display", "none");
                }

                if (!$("#SenhaLogin").val()) {

                    erro = true;
                    $("#SenhaLoginErro").text("Por favor preencha o seu email");
                    $("#SenhaLoginErro").css("display", "block");
                }

                else {
                    $("#SenhaLoginErro").css("display", "none");
                }


                if (!erro) {

                    let data = {
                        Email: $("#EmailLogin").val(),
                        Senha: $("#SenhaLogin").val()
                    };

                    $.ajax({
                        url: "@Url.Action("LoginPagamento","Comprar")",
                        method: "POST",
                        data: data,
                        success: function (retorno) {

                            if (retorno.Status) {
                                if (retorno.Mensagem == "Usuário Logado") {
                                    $("#InformacoesPessoais").slideUp(200);
                                    $("#NomeLogado").text("Nome: " + retorno.NomeLogado);
                                    $("#EmailLogado").text("Email: " + retorno.EmailLogado);
                                    $("#TelefoneLogado").text("Telefone: " + retorno.TelefoneLogado);
                                    $("#CPFLogado").text("CPF: " + retorno.CPFLogado);
                                    $("#CEPLogado").text("CEP: " + retorno.CEPLogado);
                                    $("#EstadoLogado").text("Estado: " + retorno.EstadoLogado);
                                    $("#CidadeLogado").text("Cidade: " + retorno.CidadeLogado);
                                    $("#BairroLogado").text("Bairro: " + retorno.BairroLogado);
                                    $("#RuaLogado").text("Rua: " + retorno.RuaLogado);
                                    $("#NumeroLogado").text("Número: " + retorno.NumeroLogado);
                                    $("#UsuarioLogado").slideDown(200);
                                    $("#Pagamento").slideDown(200);
                                }

                                else {
                                    $("#SenhaLoginErro").text("Email e/ou Senha erradas!");
                                    $("#SenhaLoginErro").css("display", "block");
                                }
                            }

                        },
                        error: function (retorno) {
                            console.log(retorno);
                        }
                    });
                }

            });


            $("#EfetuarPagamento").click(function () {

                let IdProduto = "@Model.Produto.Id";

                if (TipoPagamento == "Boleto") {

                    $.ajax({
                        url: "@Url.Action("GetDadosUsuario", "Comprar")",
                        method: "POST",
                        data: { IdProduto: IdProduto },
                        success: function (retorno) {
                            Usuario = retorno;
                        },
                        complete: function () {

                            let Telefone = Usuario.Telefone;
                            Telefone = Telefone.replace("(", "").replace(')', "");
                            let TelefoneFormatado = Telefone.split(" ");

                            let dados = JSON.stringify({
                                transaction_amount: Usuario.ValorRifa,
                                description: "Bilhete EiSorteei - " + Usuario.NomeProduto,
                                payment_method_id: "bolbradesco",
                                payer: {
                                    email: Usuario.Email,
                                    identification: {
                                        number: Usuario.Cpf.replace(".", "").replace(".", "").replace("-", ""),
                                        type: "CPF"
                                    },
                                    first_name: Usuario.Nome,
                                    last_name: Usuario.SobreNome
                                },
                                notification_url: "https://www.suaurl.com/notificacoes/",
                                sponsor_id: null,
                                binary_mode: false,
                                external_reference: "Bilhete " + Usuario.IdProduto,
                                statement_descriptor: "Bilhete EiSorteei",
                                additional_info: {
                                    items: [
                                        {
                                            id: "PR0001",
                                            title: "Bilhete EiSorteei - Código do Produto: " + Usuario.IdProduto,
                                            description: "Bilhete EiSorteei",
                                            picture_url: "https://http2.mlstatic.com/resources/frontend/statics/growth-sellers-landings/device-mlb-point-i_medium@2x.png",
                                            category_id: "Bilhete",
                                            quantity: 1,
                                            unit_price: Usuario.ValorRifa
                                        }
                                    ],
                                    payer: {
                                        first_name: Usuario.Nome,
                                        last_name: Usuario.SobreNome,
                                        address: {
                                            zip_code: Usuario.CEP,
                                            street_name: Usuario.Rua,
                                            street_number: Usuario.Numero
                                        },
                                        registration_date: Usuario.DataCadastro,
                                        phone: {
                                            area_code: TelefoneFormatado[0],
                                            number: TelefoneFormatado[1]
                                        }
                                    },
                                    shipments: {
                                        receiver_address: {
                                            street_name: "Av. Alberane Cunha",
                                            street_number: 81,
                                            zip_code: "37350000",
                                            city_name: "Liberdade",
                                            state_name: "Minas Gerais"
                                        }
                                    }
                                }
                            });

                            $.ajax({
                                url: "https://api.mercadopago.com/v1/payments",
                                method: 'POST',
                                beforeSend: function (xhr) {
                                    xhr.setRequestHeader('Authorization', 'Bearer APP_USR-5017428128263404-072015-ddd04542ab6288891aebac5789addf33-247787081');
                                },
                                data: dados,
                                success: function (retorno) {

                                    let BoletoUrl = retorno.transaction_details.external_resource_url;

                                    Swal.fire({
                                        title: 'Quase lá...',
                                        text: "Obrigado por comprar conosco, seus Bilhetes foram reservados, efetue o pagamento do boleto para que o seus bilhetes fiquem válidos para o sorteio.",
                                        icon: 'success',
                                        showCancelButton: true,
                                        confirmButtonColor: '#02B2F4',
                                        cancelButtonColor: '#25CA17',
                                        cancelButtonText: 'OK',
                                        confirmButtonText: 'Visualizar Boleto'
                                    }).then((result) => {

                                        if (result.isConfirmed) {
                                            window.open(BoletoUrl, "_blank");
                                        }

                                    });

                                },

                                error: function (retorno) {
                                    Swal.fire({
                                        title: 'Boleto',
                                        text: "Não foi possível gerar seu boleto, tente novamente mais tarde.",
                                        icon: 'error',
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        cancelButtonText: 'Não',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            });

                        }
                    });

                    return;
                }

                let erro = false;

                let Numero = $("#NumeroCartao").val();
                let Titulo = $("#TituloCartao").val();
                let Data = $("#DataCartao").val();
                let CVV = $("#CVVCartao").val();
                let CPF = $("#CPFCartao").val();
                let CodigoVendedor = $("#CodigoVendedor").val();

                if (!Numero) {
                    $("#ErroNumero").css("display", "block");
                    erro = true;
                }

                else {
                    $("#ErroNumero").css("display", "none");
                }


                if (!Titulo) {
                    $("#ErroTitulo").css("display", "block");
                    erro = true;
                }

                else {
                    $("#ErroTitulo").css("display", "none");
                }


                if (!Data) {
                    $("#ErroData").css("display", "block");
                    erro = true;
                }

                else {
                    $("#ErroData").css("display", "none");
                }

                if (!CVV) {
                    $("#ErroCVV").css("display", "block");
                    erro = true;
                }

                else {
                    $("#ErroCVV").css("display", "none");
                }

                if (!CPF) {
                    $("#ErroCPF").css("display", "block");
                }

                else {
                    $("#ErroCPF").css("display", "none");
                }


                if (!erro) {

                    let DataFormatada = Data.split("/");
                    let CPFFormatado = CPF.replace(".", "").replace(".", "").replace("-", "");

                    let MesCartao = DataFormatada[0];
                    let AnoCartao = DataFormatada[1];

                    let BandeiraCartao = "";

                    var cards = {
                        visa: /^4[0-9]{12}(?:[0-9]{3})/,
                        mastercard: /^5[1-5][0-9]{14}/,
                        diners: /^3(?:0[0-5]|[68][0-9])[0-9]{11}/,
                        amex: /^3[47][0-9]{13}/,
                        discover: /^6(?:011|5[0-9]{2})[0-9]{12}/,
                        hipercard: /^(606282\d{10}(\d{3})?)|(3841\d{15})/,
                        elo: /^((((636368)|(438935)|(504175)|(451416)|(636297))\d{0,10})|((5067)|(4576)|(4011))\d{0,12})/,
                        jcb: /^(?:2131|1800|35\d{3})\d{11}/,
                        aura: /^(5078\d{2})(\d{2})(\d{11})$/
                    };

                    for (var flag in cards) {
                        if (cards[flag].test(Numero)) {
                            BandeiraCartao = flag;
                        }
                    }

                    window.Mercadopago.setPublishableKey("APP_USR-4f22958e-cccd-49ac-b52d-02ae9b9697a9");
                    window.Mercadopago.getIdentificationTypes();

                    let DadosCartao = {

                        cardNumber: Numero,
                        cardExpirationMonth: MesCartao,
                        cardExpirationYear: AnoCartao,
                        securityCode: CVV,
                        cardholderName: Titulo,
                        docType: "CPF",
                        docNumber: CPFFormatado

                    };


                    var hash = window.Mercadopago.createToken(DadosCartao, setCardTokenAndPay);

                    function setCardTokenAndPay(status, response) {
                        if (status == 200 || status == 201) {

                            let Usuario = "";

                            $.ajax({
                                url: "@Url.Action("GetDadosUsuario", "Comprar")",
                                method: "POST",
                                data: { IdProduto: IdProduto },
                                success: function (retorno) {
                                    Usuario = retorno;
                                },
                                complete: function () {


                                    let CodigoCartao = response.id;

                                    let Telefone = Usuario.Telefone;
                                    Telefone = Telefone.replace("(", "").replace(')', "");
                                    let TelefoneFormatado = Telefone.split(" ");

                                    let dados = JSON.stringify({
                                        token: CodigoCartao,
                                        installments: 1,
                                        transaction_amount: Usuario.ValorRifa,
                                        description: "Bilhete EiSorteei - " + Usuario.NomeProduto,
                                        payment_method_id: BandeiraCartao,
                                        payer: {
                                            email: Usuario.Email,
                                            identification: {
                                                number: CPFFormatado,
                                                type: "CPF"
                                            }
                                        },
                                        notification_url: "https://www.suaurl.com/notificacoes/",
                                        sponsor_id: null,
                                        binary_mode: false,
                                        external_reference: "Bilhete " + Usuario.IdProduto,
                                        statement_descriptor: "Bilhete EiSorteei",
                                        additional_info: {
                                            items: [
                                                {
                                                    id: "PR0001",
                                                    title: "Bilhete EiSorteei - Código do Produto: " + Usuario.IdProduto,
                                                    description: "Bilhete EiSorteei",
                                                    picture_url: "https://http2.mlstatic.com/resources/frontend/statics/growth-sellers-landings/device-mlb-point-i_medium@2x.png",
                                                    category_id: "Bilhete",
                                                    quantity: 1,
                                                    unit_price: Usuario.ValorRifa
                                                }
                                            ],
                                            payer: {
                                                first_name: Usuario.Nome,
                                                last_name: Usuario.SobreNome,
                                                address: {
                                                    zip_code: Usuario.CEP,
                                                    street_name: Usuario.Rua,
                                                    street_number: Usuario.Numero
                                                },
                                                registration_date: Usuario.DataCadastro,
                                                phone: {
                                                    area_code: TelefoneFormatado[0],
                                                    number: TelefoneFormatado[1]
                                                }
                                            },
                                            shipments: {
                                                receiver_address: {
                                                    street_name: "Av. Alberane Cunha",
                                                    street_number: 81,
                                                    zip_code: "37350000",
                                                    city_name: "Liberdade",
                                                    state_name: "Minas Gerais"
                                                }
                                            }
                                        }
                                    });

                                    $.ajax({
                                        url: "https://api.mercadopago.com/v1/payments",
                                        method: 'POST',
                                        beforeSend: function (xhr) {
                                            xhr.setRequestHeader('Authorization', 'Bearer APP_USR-5017428128263404-072015-ddd04542ab6288891aebac5789addf33-247787081');
                                        },
                                        data: dados,
                                        success: function (retorno) {

                                            if (retorno.status == "approved" || retorno.status == "in_process") {

                                                let NumeroRifa = $("#NumeroRifa").text();

                                                $.ajax({
                                                    url: "@Url.Action("RegistrarCompra","Comprar")",
                                                    method: "POST",
                                                    data: { IdProduto: Usuario.IdProduto, CodigoVendedor: CodigoVendedor, IdCompra: retorno.id, NumeroRifa: NumeroRifa },
                                                    success: function (data) {
                                                        if (data.Status) {

                                                            if (retorno.status == "approved") {
                                                                Swal.fire({
                                                                    title: 'Pagamento Efetuado',
                                                                    text: "Seu pagamento foi aceito, obrigado pela sua compra fique atento para a data do sorteio e boa sorte.",
                                                                    icon: 'success',
                                                                    showCancelButton: false,
                                                                    confirmButtonColor: '#3085d6',
                                                                    cancelButtonColor: '#d33',
                                                                    cancelButtonText: 'Não',
                                                                    confirmButtonText: 'OK'
                                                                });
                                                            }

                                                            if (retorno.status == "in_process") {
                                                                Swal.fire({
                                                                    title: 'Pagamento em Análise',
                                                                    text: "Seu pagamento está sendo analisado, quando seu pagamento for aprovado você receberá um email confirmando seu pagamento.",
                                                                    icon: 'success',
                                                                    showCancelButton: false,
                                                                    confirmButtonColor: '#3085d6',
                                                                    cancelButtonColor: '#d33',
                                                                    cancelButtonText: 'Não',
                                                                    confirmButtonText: 'OK'
                                                                });
                                                            }

                                                            $("#myModal2").css('display', "none");
                                                        }
                                                    }
                                                });
                                            }

                                            else {
                                                Swal.fire({
                                                    title: 'Pagamento não efetuado',
                                                    text: "Seu pagamento não foi aceito, entre em contato com o distribuinte do seu cartão e tente novamente mais tarde.",
                                                    icon: 'error',
                                                    showCancelButton: false,
                                                    confirmButtonColor: '#3085d6',
                                                    cancelButtonColor: '#d33',
                                                    cancelButtonText: 'Não',
                                                    confirmButtonText: 'OK'
                                                });
                                            }
                                        },
                                        error: function (retorno) {                                            
                                            Swal.fire({
                                                title: 'Cartão Inválido',
                                                text: "Os dados do cartão informado não são inválidos, por favor verifique seus dados e tente novamente!",
                                                icon: 'error',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                cancelButtonColor: '#d33',
                                                cancelButtonText: 'Não',
                                                confirmButtonText: 'OK'
                                            });
                                        }
                                    });


                                }
                            });

                        }

                        else {
                            Swal.fire({
                                title: 'Cartão Inválido',
                                text: "Os dados do cartão informado não são inválidos, por favor verifique seus dados e tente novamente!",
                                icon: 'error',
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                cancelButtonText: 'Não',
                                confirmButtonText: 'OK'
                            });
                        }
                    };
                }

            });


            $("#FormaPagamentoBoleto").change(function () {

                if ($(this).prop("checked")) {
                    TipoPagamento = "Boleto";
                    $("#TipoCartao").slideUp(200);
                    $("#TipoBoleto").slideDown(200);
                }

            });

            $("#FormaPagamentoCartao").change(function () {

                if ($(this).prop("checked")) {
                    TipoPagamento = "Cartão de Crédito";
                    $("#TipoCartao").slideDown(200);
                    $("#TipoBoleto").slideUp(200);
                }

            });


        });

    </script>
</body>

</html>




