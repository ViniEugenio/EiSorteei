@model EiSorteei.Models.PagamentoViewModel

@{
    ViewBag.Title = "Ei Sorteei";
    Layout = null;
    long IdUsuarioLogado = Model.Usuario != null ? Model.Usuario.Id : 0;
    string[] Bilhetes = Model.Bilhetes.Split(',');
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EiSorteei</title>


    <link rel="font" href="~/Content/fonts/Amiri-Bold.ttf" />
    <link rel="font" href="~/Content/fonts/Amiri-BoldItalic.ttf" />
    <link rel="font" href="~/Content/fonts/Amiri-Italic.ttf" />
    <link rel="font" href="~/Content/fonts/Amiri-Regular.ttf" />
    <link rel="shortcut icon"
          href="~/Imagens/favicon.ico"
          type="image/x-icon" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />


    <style>
        body {
            background: #1F1F1F;
        }

        #RifaEscolhida {
            background-color: rgb(37, 202, 23);
            border-radius: 24px;
            color: white;
            padding: 10px;
            text-align: center;
            height: 40px;
            width: 70px;
            margin-top: 2px;
        }

        .Bilhetes {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
        }

        .erro {
            color: red;
            display: none;
        }

        @@media only screen and (max-width: 1000px) {
            #EfetuarPagamento {
                font-size: 28px !important;
                border-radius: 44px !important;
                width: 100% !important;
            }
        }
    </style>

</head>

<body>

    <div style="width:80%;margin:auto; margin-top:50px; margin-bottom:50px;">
        <div class="card" style="border-radius:24px;">

            <div class="card-body">

                <div class="row">

                    <div class="col-md-6" style="width:100%;">
                        <div class="carousel form-group" style="margin-top:20px;" id="Imagens" align="center">

                            @foreach (var x in Model.Imagens)
                            {
                                <div><img src="~/Content/ImagemProdutos/@x.Caminho" alt="Imagem do Produto" style="width:80%;" class="imagem_produto" /></div>
                            }

                        </div>

                        @if (IdUsuarioLogado == 0)
                        {
                            <div class="row" id="InformacoesPessoais">

                                <div class="col-md-12" id="Login" style="margin:auto;">
                                    <div class="card form-group" style="margin-top:5px;">
                                        <div class="card-header">
                                            <h3 class="text-center">Fazer Login</h3>
                                        </div>
                                        <div class="card-body">
                                            <div class="form-group">

                                                <div class="form-group">
                                                    <label class="control-label">Email</label>
                                                    <input class="form-control" id="EmailLogin" />
                                                    <span id="EmailLoginErro" class="erro"></span>
                                                </div>

                                                <div class="form-group">
                                                    <label class="control-label">Senha</label>
                                                    <input class="form-control" id="SenhaLogin" type="password" />
                                                    <span class="erro" id="SenhaLoginErro"></span>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="card-footer">
                                            <button class="btn btn-success" id="Entrar"><i class="fas fa-sign-in-alt"></i> Entrar</button>
                                            <button class="btn btn-primary" id="CriarConta"><i class="fa fa-user"></i> Criar sua conta</button>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12" id="CadastrarUsuario" style="display:none;">
                                    <div class="card" style="margin-top:5px;">

                                        <div class="card-header">
                                            <h3><i class="fa fa-user"></i> Informações Pessoais</h3>
                                        </div>

                                        <div class="card-body">

                                            <div class="row">

                                                <input value="@ViewBag.Produto" name="IdProduto" style="display:none;" />
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Nome</label>
                                                        <input class="form-control" id="NomeLogin" />
                                                        <span class="erro" id="NomeErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">SobreNome</label>
                                                        <input class="form-control" id="SobreNomeLogin" />
                                                        <span class="erro" id="SobreNomeErro"></span>
                                                    </div>
                                                </div>

                                            </div>

                                            <div class="row">

                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <label class="control-label">Email</label>
                                                        <input class="form-control" id="EmailCadastrar" />
                                                        <span class="erro" id="EmailErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Telefone</label>
                                                        <input class="form-control" id="TelefoneLogin" />
                                                        <span class="erro" id="TelefoneErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">CPF</label>
                                                        <input class="form-control" id="CPFLogin" />
                                                        <span class="erro" id="CPFErro"></span>
                                                    </div>
                                                </div>

                                            </div>

                                            <div class="row">

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Estado</label>
                                                        <select name="Estado" class="form-control" id="EstadoLogin">
                                                            @foreach (var estado in ViewBag.Estados)
                                                            {
                                                                <option value="@estado.Name">@estado.Name</option>
                                                            }
                                                        </select>
                                                        <span class="erro" id="EstadoErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Cidade</label>
                                                        <input class="form-control" id="CidadeLogin" />
                                                        <span class="erro" id="CidadeErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">

                                                    <div class="form-group">
                                                        <label class="control-label">Bairro</label>
                                                        <input class="form-control" id="BairroLogin" />
                                                        <span class="erro" id="BairroErro"></span>
                                                    </div>

                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">CEP</label>
                                                        <input class="form-control" id="CEPLogin" />
                                                        <span class="erro" id="CEPErro"></span>
                                                    </div>
                                                </div>

                                            </div>

                                            <div class="row">

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Rua</label>
                                                        <input class="form-control" id="RuaLogin" />
                                                        <span class="erro" id="RuaErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Número</label>
                                                        <input class="form-control" id="NumeroLogin" />
                                                        <span class="erro" id="NumeroErro"></span>
                                                    </div>
                                                </div>

                                            </div>


                                            <div class="row">

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Senha</label>
                                                        <input class="form-control" id="SenhaCadastrar" type="password" />
                                                        <span class="erro" id="SenhaErro"></span>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">Confirmar Senha</label>
                                                        <input class="form-control" id="ConfirmarLogin" type="password" />
                                                        <span class="erro" id="ConfirmarErro"></span>
                                                    </div>
                                                </div>

                                            </div>

                                        </div>

                                        <div class="card-footer">
                                            <div class="form-group">
                                                <button class="btn btn-success" id="RealizarCadastro"><i class="fa fa-user"></i> Realizar Cadastro</button>
                                                <button class="btn btn-primary text-white" id="FazerLogin"><i class="fa fa-lock"></i> Fazer Login</button>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>

                        }

                        <div class="card" id="DadosUsuario" style="display:none;">
                            <div class="card-header">
                                <h3><i class="fa fa-user"></i> Informações Pessoais</h3>
                            </div>
                            <div class="card-body">
                                <p><strong id="NomeLogado"></strong></p>
                                <p><strong id="EmailLogado"></strong></p>
                                <p><strong id="TelefoneLogado"></strong></p>
                                <p><strong id="CPFLogado"></strong></p>
                                <p><strong>Seu comprovante será enviado para o email de cadstro após a confirmaçao do pagamento</strong></p>
                            </div>
                        </div>

                        @*<div class="col-md-6" style="margin-top:5px; margin:auto; margin-top:5px;">

                                <div class="card">
                                    <div class="card-header">
                                        <h3><i class="fas fa-map-marked-alt"></i> Informações de Entrega</h3>
                                    </div>
                                    <div class="card-body row">
                                        <div class="col-md-6">
                                            <p><strong id="CEPLogado"></strong></p>
                                            <p><strong id="EstadoLogado"></strong></p>
                                            <p><strong id="CidadeLogado"></strong></p>
                                            <p><strong id="BairroLogado"></strong></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><strong id="RuaLogado"></strong></p>
                                            <p><strong id="NumeroLogado"></strong></p>
                                        </div>

                                    </div>
                                </div>
                            </div>*@

                    </div>

                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="text-center row">
                                    <div class="form-group text-center col-md-6">

                                        <img src="~/Imagens/Cópia de Logo Verde e Branco de Curso Preparatório (1).png" alt="Logo do Site" id="brand" />

                                    </div>
                                    <div class="form-group text-center col-md-6" style="margin-top:20px;">
                                        <p><strong>@Model.Produto.Nome</strong></p>
                                    </div>

                                    <div class="col-md-12">
                                        <hr />
                                        <strong>Bilhetes Escolhidos:</strong>
                                        <div class="Bilhetes">
                                            @for (int x = 0; x < Bilhetes.Length; x++)
                                            {
                                                <div id="RifaEscolhida" style="margin-right:2px;">
                                                    @Bilhetes[x]
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                @*<div class="form-group col-md-6">
                                        <p><strong>Valor Unitário: R$ @Math.Round(Model.Produto.ValorRifa, 2)</strong></p>
                                        <p><strong>Entrega: ---</strong></p>
                                    </div>*@
                                <div class="form-group col-md-12 text-center">
                                    <p><strong>Valor Unitário: R$ @Math.Round(Model.Produto.ValorRifa, 2) X @Model.Bilhetes.Split(',').Count() =  R$ @Model.ValorTotal</strong></p>
                                </div>

                                <div class="form-group col-md-12 row text-center">

                                    @foreach (var x in Model.OrderBumps)
                                    {
                                        <div class="col-md-4 form-group">
                                            <input type="checkbox" style="transform: scale(2.5);" class="AddOrderBump" data-id="@x.Id" data-value="@x.Valor" id="OrderBump-@x.Id" />
                                        </div>

                                        <div class="col-md-4 form-group">
                                            <p><strong>@x.Nome</strong></p>
                                        </div>

                                        <div class="col-md-4 form-group">
                                            <p><strong>R$ @Math.Round(x.Valor, 2)</strong></p>
                                        </div>

                                        <div class="col-md-12 form-group">
                                            <img src="~/Content/ImagensOrderBumps/@x.Imagem" alt="Order Bump" style="width:70%" />
                                        </div>
                                    }

                                </div>


                            </div>
                            <h3 class="text-center">Valor Total: R$ <span id="ValorTotal">@Model.ValorTotal</span></h3>
                        </div>

                        <div class="bg-danger text-white text-center col-md-12 form-group card" style="height:190px; margin-top:10px; display:flex; flex-direction:column; align-items:center; justify-content:center;">
                            <strong style="font-size: 22px;"><span id="QuantidadePessoas">2</span> Pessoas estão escolhendo os seus bilhetes agora. Garanta logo o seu.</strong>
                        </div>
                    </div>

                </div>


                <div id="Pagamento" style="margin-top:5px; @(IdUsuarioLogado==0?"display:none;":"")">
                    <div class="card">
                        <div class="card-header">
                            <h3><i class="fas fa-money-bill-alt"></i> Pagamento</h3>
                        </div>

                        <div class="card-body">
                            <input type="radio" name="FormaPagamento" checked id="FormaPagamentoCartao" /> Cartão de Crédito
                            @*<div class="form-group text-center">
                                    <strong>Selecione a Forma de Pagamento: </strong>
                                    <div class="form-group">

                                        <input type="radio" name="FormaPagamento" id="FormaPagamentoBoleto" /> Boleto
                                    </div>
                                </div>*@

                            <div class="row">
                                <div class="col-md-6">
                                    <div id="TipoCartao" class="row">
                                        <div class="col-md-12 form-group">
                                            <strong>Número do Cartão</strong>
                                            <input type="text" class="form-control" placeholder="Digite o número do seu cartão" id="NumeroCartao" />
                                            <span class="erro" id="ErroNumero">Campo Obrigatório</span>
                                        </div>

                                        <div class="col-md-6 form-group">
                                            <strong>Nome do Titular</strong>
                                            <input type="text" class="form-control" placeholder="Digite o nome do Titulo do Cartão" id="TituloCartao" />
                                            <span class="erro" id="ErroTitulo">Campo Obrigatório</span>
                                        </div>

                                        <div class="col-md-6 form-group">
                                            <strong>CPF</strong>
                                            <input type="text" class="form-control" placeholder="Digite o CPF do dono do Cartão" id="CPFCartao" />
                                            <span class="erro" id="ErroCPF">Campo Obrigatório</span>
                                        </div>

                                        <div class="form-group col-md-6">
                                            <strong>Data de Vencimento</strong>
                                            <input type="text" class="form-control" placeholder="Ex: 11/@DateTime.Now.Year.ToString()[2]@DateTime.Now.Year.ToString()[3]" id="DataCartao" />
                                            <span class="erro" id="ErroData">Campo Obrigatório</span>
                                        </div>

                                        <div class="form-group col-md-6">
                                            <strong>CVV</strong>
                                            <input type="text" class="form-control" placeholder="Digite o nome do Titulo do Cartão" maxlength="3" id="CVVCartao" />
                                            <span class="erro" id="ErroCVV">Campo Obrigatório</span>
                                        </div>

                                    </div>

                                    <input type="radio" name="FormaPagamento" id="FormaPagamentoBoleto" /> Boleto
                                    <div id="TipoBoleto" class="form-group" style="margin-left:20px; display:none;">
                                        <p><strong>Clique em "Efetuar Pagamento" para gerar seu boleto.</strong></p>
                                        <p><strong>Informações sobre o pagamento via boleto:</strong></p>
                                        <ul>
                                            <li>Valor à vista R$ @Model.ValorTotal</li>
                                            <li>Não pode ser parcelado! Use cartão de crédito para parcelar sua compra</li>
                                            <li>Fique atento a prazo de vencimento do seu boleto</li>
                                        </ul>
                                    </div>

                                    <div class="form-group">
                                        <strong>Código do Vendedor</strong>
                                        <input type="text" class="form-control" placeholder="Digite o Código do Vendedor" maxlength="8" id="CodigoVendedor" value="@ViewBag.CodVendedor" />
                                        <span class="erro" id="ErroVendedor"></span>
                                        <span class="text-danger">* Caso você tenha adquirido seu bilhete por intermédio de algum vendedor, por favor informe o código do mesmo no campo acima.</span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="form-group col-md-12">
                                            <div align="center">
                                                <img src="~/Imagens/Cópia de Logo Verde e Branco de Curso Preparatório (1).png" alt="Logo do Site" id="brand" />
                                            </div>

                                        </div>
                                        <div class="col-md-12 text-center">
                                            <button class="btn btn-success" style="width: 50%; height: 130px; font-size: 34px; border-radius: 115px;" id="EfetuarPagamento">Efetuar Pagamento</button>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>


                </div>

            </div>
        </div>

        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="ModalOrder">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title text-center">Selecione as Rifas onde serão adicionados os serviços adicionais</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="Bilhetes">
                            @for (int x = 0; x < Bilhetes.Length; x++)
                            {
                                <div class="text-center">
                                    <div id="RifaEscolhida" style="margin-right:2px;">
                                        @Bilhetes[x]
                                    </div>
                                    <input type="checkbox" style="transform: scale(1.5);" class="AumentarPreco" data-numero="@Bilhetes[x]" />
                                </div>

                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-success" id="ConfirmarOrderBumps" data-dismiss="modal"><i class="fa fa-plus"></i> Confirmar</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
        <script src="https://cdn.ckeditor.com/4.14.1/standard/ckeditor.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
        <script src="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.6/dist/jquery.fancybox.min.js"></script>
        <script type="text/javascript" src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
        <script src="https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.0/jquery.mask.js"></script>

        <script>

            $(document).ready(function () {

                $("#CPFLogin").mask("000.000.000-00");
                $("#CEPLogin").mask("00000-000");
                $("#TelefoneLogin").mask("(00) 00000-0000");

                var QuantidadePessoas = setInterval(myTimer, 4000);
                function myTimer() {
                    let Quantidade = Math.floor(Math.random() * 20);
                    if (Quantidade > 0) {
                        $("#QuantidadePessoas").text(Quantidade);
                    }
                }

                let Logado = "@IdUsuarioLogado";
                let Bilhetes = "@Model.Bilhetes";
                let BilhetesFormatados = Bilhetes.split(", ");
                let ValorTotal = "@Model.ValorTotal";
                ValorTotal = ValorTotal.replace(',', '.');
                let ValorTotalFormatado = parseFloat(ValorTotal);
                let ActualyOrderBump = 0;
                let ActualyValueOrderBump = 0;
                let OrderBumpsEscolhidos = [];

                $(".AddOrderBump").change(function () {

                    ActualyOrderBump = $(this).attr('data-id');
                    ActualyValueOrderBump = $(this).attr('data-value');

                    if ($(this).prop("checked")) {

                        let TodosBilhetes = $(".AumentarPreco");
                        let Escolhidos = OrderBumpsEscolhidos.filter(order => order.IdOrderBump == ActualyOrderBump);

                        $.each(TodosBilhetes, function (index, data) {

                            $(data).prop("checked", false);

                            $.each(Escolhidos, function (indice, escolhido) {


                                if (escolhido.NumeroBilhete == $(data).attr("data-numero")) {

                                    $(data).prop("checked", true);

                                }

                            });

                        });

                        $("#ModalOrder").modal('show');

                    }

                    else {

                        let Quantidade = OrderBumpsEscolhidos.filter(order => order.IdOrderBump == ActualyOrderBump && order.Confirmado).length;
                        ValorTotalFormatado = (parseFloat(ValorTotalFormatado) - (parseFloat(ActualyValueOrderBump)).toFixed(2) * Quantidade).toFixed(2);
                        $("#ValorTotal").text(ValorTotalFormatado.toString().replace('.', ','));

                        OrderBumpsEscolhidos = OrderBumpsEscolhidos.filter(order => order.IdOrderBump != ActualyOrderBump);

                    }

                });

                $(".AumentarPreco").change(function () {

                    let NumeroBilhete = $(this).attr('data-numero');

                    if ($(this).prop("checked")) {

                        let data = {
                            IdOrderBump: ActualyOrderBump,
                            NumeroBilhete: NumeroBilhete,
                            ValorOrderBump: ActualyValueOrderBump,
                            Confirmado : false
                        };

                        OrderBumpsEscolhidos.push(data);
                    }

                    else {
                        OrderBumpsEscolhidos = OrderBumpsEscolhidos.filter(order => order.IdOrderBump != ActualyOrderBump && order.NumeroBilhete != NumeroBilhete);
                    }

                });

                $("#ConfirmarOrderBumps").click(function () {

                    ValorTotalFormatado = parseFloat("@Model.ValorTotal");
                    $.each(OrderBumpsEscolhidos, function (index, data) {
                        ValorTotalFormatado = (parseFloat(ValorTotalFormatado) + parseFloat(data.ValorOrderBump)).toFixed(2);
                        $("#ValorTotal").text(ValorTotalFormatado.toString().replace('.', ','));
                        data.Confirmado = true;
                    });

                });


                //$(document).on('hide.bs.modal', '#ModalOrder', function () {
                //    if (OrderBumpsEscolhidos.filter(order => order.IdOrderBump == ActualyOrderBump).length == 0) {
                //        $("#OrderBump-" + ActualyOrderBump).prop('checked', false);
                //    }
                //});

                if (Logado != "0") {

                    $.ajax({
                        url: "@Url.Action("GetInformacoesUsuario","Comprar")",
                        method: "POST",
                        data: { IdUsuario: Logado },
                        success: function (retorno) {

                            if (retorno.Status) {
                                if (retorno.Mensagem == "Usuário Logado") {
                                    $("#DadosUsuario").slideDown(200);
                                    $("#NomeLogado").text("Nome: " + retorno.NomeLogado);
                                    $("#EmailLogado").text("Email: " + retorno.EmailLogado);
                                    $("#TelefoneLogado").text("Telefone: " + retorno.TelefoneLogado);
                                    $("#CPFLogado").text("CPF: " + retorno.CPFLogado);
                                    $("#CEPLogado").text("CEP: " + retorno.CEPLogado);
                                    $("#EstadoLogado").text("Estado: " + retorno.EstadoLogado);
                                    $("#CidadeLogado").text("Cidade: " + retorno.CidadeLogado);
                                    $("#BairroLogado").text("Bairro: " + retorno.BairroLogado);
                                    $("#RuaLogado").text("Rua: " + retorno.RuaLogado);
                                    $("#NumeroLogado").text("Número: " + retorno.NumeroLogado);
                                    $("#DadosUsuario").slideDown(200);
                                    $("#Pagamento").slideDown(200);
                                }
                            }

                        },
                        error: function (retorno) {
                            console.log(retorno);
                        }
                    });

                }


                let TipoPagamento = "Cartão de Crédito";

                $("#CPFCartao").mask("000.000.000-00");
                $("#DataCartao").mask("00/00");
                $("#CVVCartao").mask("000");

                $('.carousel').slick({
                    autoplay: true,
                    autoplaySpeed: 4000,
                    nextArrow: '#next',
                    prevArrow: '#prev'
                });

                $("#CriarConta").click(function () {

                    $("#Login").slideUp(200);
                    $("#CadastrarUsuario").slideDown(200);

                });

                $("#FazerLogin").click(function () {

                    $("#CadastrarUsuario").slideUp(200);
                    $("#Login").slideDown(200);

                });


                $("#Entrar").click(function () {

                    let erro = false;

                    if (!$("#EmailLogin").val()) {

                        erro = true;
                        $("#EmailLoginErro").text("Por favor preencha o seu email");
                        $("#EmailLoginErro").css("display", "block");
                    }

                    else {
                        $("#EmailLoginErro").css("display", "none");
                    }

                    if (!$("#SenhaLogin").val()) {

                        erro = true;
                        $("#SenhaLoginErro").text("Por favor preencha o seu email");
                        $("#SenhaLoginErro").css("display", "block");
                    }

                    else {
                        $("#SenhaLoginErro").css("display", "none");
                    }


                    if (!erro) {

                        let data = {
                            Email: $("#EmailLogin").val(),
                            Senha: $("#SenhaLogin").val()
                        };

                        $.ajax({
                            url: "@Url.Action("LoginPagamento","Comprar")",
                            method: "POST",
                            data: data,
                            success: function (retorno) {

                                if (retorno.Status) {
                                    if (retorno.Mensagem == "Usuário Logado") {
                                        $("#InformacoesPessoais").slideUp(200);
                                        $("#NomeLogado").text("Nome: " + retorno.NomeLogado);
                                        $("#EmailLogado").text("Email: " + retorno.EmailLogado);
                                        $("#TelefoneLogado").text("Telefone: " + retorno.TelefoneLogado);
                                        $("#CPFLogado").text("CPF: " + retorno.CPFLogado);
                                        $("#CEPLogado").text("CEP: " + retorno.CEPLogado);
                                        $("#EstadoLogado").text("Estado: " + retorno.EstadoLogado);
                                        $("#CidadeLogado").text("Cidade: " + retorno.CidadeLogado);
                                        $("#BairroLogado").text("Bairro: " + retorno.BairroLogado);
                                        $("#RuaLogado").text("Rua: " + retorno.RuaLogado);
                                        $("#NumeroLogado").text("Número: " + retorno.NumeroLogado);
                                        $("#DadosUsuario").slideDown(200);
                                        $("#Pagamento").slideDown(200);
                                    }

                                    else {
                                        $("#SenhaLoginErro").text("Email e/ou Senha erradas!");
                                        $("#SenhaLoginErro").css("display", "block");
                                    }
                                }

                            },
                            error: function (retorno) {
                                console.log(retorno);
                            }
                        });
                    }

                });


                $("#EfetuarPagamento").click(function () {

                    let IdProduto = "@Model.Produto.Id";

                    if (TipoPagamento == "Boleto") {

                        $.ajax({
                            url: "@Url.Action("GetDadosUsuario", "Comprar")",
                            method: "POST",
                            data: { IdProduto: IdProduto },
                            success: function (retorno) {
                                Usuario = retorno;
                            },
                            complete: function () {

                                let Telefone = Usuario.Telefone;
                                Telefone = Telefone.replace("(", "").replace(')', "");
                                let TelefoneFormatado = Telefone.split(" ");

                                let dados = JSON.stringify({
                                    transaction_amount: parseFloat(ValorTotalFormatado) ,
                                    description: "Bilhete EiSorteei - " + Usuario.NomeProduto,
                                    payment_method_id: "bolbradesco",
                                    payer: {
                                        email: Usuario.Email,
                                        identification: {
                                            number: Usuario.Cpf.replace(".", "").replace(".", "").replace("-", ""),
                                            type: "CPF"
                                        },
                                        first_name: Usuario.Nome,
                                        last_name: Usuario.SobreNome
                                    },
                                    notification_url: "https://www.suaurl.com/notificacoes/",
                                    sponsor_id: null,
                                    binary_mode: false,
                                    external_reference: "Bilhete " + Usuario.IdProduto,
                                    statement_descriptor: "Bilhete EiSorteei",
                                    additional_info: {
                                        items: [
                                            {
                                                id: "PR0001",
                                                title: "Bilhete EiSorteei - Código do Produto: " + Usuario.IdProduto,
                                                description: "Bilhete EiSorteei",
                                                picture_url: "https://http2.mlstatic.com/resources/frontend/statics/growth-sellers-landings/device-mlb-point-i_medium@2x.png",
                                                category_id: "Bilhete",
                                                quantity: 1,
                                                unit_price: Usuario.ValorRifa
                                            }
                                        ],
                                        payer: {
                                            first_name: Usuario.Nome,
                                            last_name: Usuario.SobreNome,
                                            address: {
                                                zip_code: Usuario.CEP,
                                                street_name: Usuario.Rua,
                                                street_number: Usuario.Numero
                                            },
                                            registration_date: Usuario.DataCadastro,
                                            phone: {
                                                area_code: TelefoneFormatado[0],
                                                number: TelefoneFormatado[1]
                                            }
                                        },
                                        shipments: {
                                            receiver_address: {
                                                street_name: "Av. Alberane Cunha",
                                                street_number: 81,
                                                zip_code: "37350000",
                                                city_name: "Liberdade",
                                                state_name: "Minas Gerais"
                                            }
                                        }
                                    }
                                });


                                $.ajax({
                                    url: "@Url.Action("VerificaBilhetes","Comprar")",
                                    method: 'POST',
                                    data: { Bilhetes: Bilhetes, IdProduto: IdProduto },
                                    success: function (retorno) {

                                        if (!retorno.Status) {

                                            Swal.fire({
                                                title: 'Boleto',
                                                text: retorno.Mensagem,
                                                icon: 'error',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                cancelButtonColor: '#d33',
                                                cancelButtonText: 'Não',
                                                confirmButtonText: 'OK'
                                            });

                                        }

                                        else {
                                            $.ajax({
                                                url: "https://api.mercadopago.com/v1/payments",
                                                method: 'POST',
                                                beforeSend: function (xhr) {
                                                    xhr.setRequestHeader('Authorization', 'Bearer APP_USR-5017428128263404-072015-ddd04542ab6288891aebac5789addf33-247787081');
                                                },
                                                data: dados,
                                                success: function (retorno) {

                                                    let BoletoUrl = retorno.transaction_details.external_resource_url;
                                                    let CodigoVendedor = $("#CodigoVendedor").val();

                                                    $.ajax({
                                                        url: "@Url.Action("CompraRealizada", "Comprar")",
                                                        method: "POST",
                                                        data: {
                                                            Status: retorno.status,
                                                            IdProduto: IdProduto,
                                                            IdCompra: retorno.id,
                                                            TipoPagamento: "Boleto",
                                                            CodigoVendedor: CodigoVendedor,
                                                            Bilhetes: Bilhetes,
                                                            UrlBoleto: BoletoUrl,
                                                            OrderBumps: OrderBumpsEscolhidos,
                                                            ValorCompra: ValorTotalFormatado
                                                        },
                                                        success: function (retorno) {

                                                            if (retorno.Status) {

                                                                $("#EfetuarPagamento").prop("disabled", "disabled");

                                                                Swal.fire({
                                                                    title: 'Quase lá...',
                                                                    text: retorno.Mensagem,
                                                                    icon: 'success',
                                                                    showCancelButton: true,
                                                                    confirmButtonColor: '#02B2F4',
                                                                    cancelButtonColor: '#25CA17',
                                                                    cancelButtonText: 'OK',
                                                                    confirmButtonText: 'Visualizar Boleto'
                                                                }).then((result) => {

                                                                    if (result.isConfirmed) {
                                                                        window.open(BoletoUrl, "_blank");
                                                                    }

                                                                });
                                                            }

                                                            else {
                                                                Swal.fire({
                                                                    title: 'Boleto',
                                                                    text: retorno.Mensagem,
                                                                    icon: 'error',
                                                                    showCancelButton: false,
                                                                    confirmButtonColor: '#3085d6',
                                                                    cancelButtonColor: '#d33',
                                                                    cancelButtonText: 'Não',
                                                                    confirmButtonText: 'OK'
                                                                });
                                                            }

                                                        }
                                                    });

                                                },

                                                error: function (retorno) {

                                                    Swal.fire({
                                                        title: 'Boleto',
                                                        text: "Não foi possível gerar seu boleto, tente novamente mais tarde.",
                                                        icon: 'error',
                                                        showCancelButton: false,
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        cancelButtonText: 'Não',
                                                        confirmButtonText: 'OK'
                                                    });
                                                }
                                            });
                                        }

                                    }
                                });




                            }
                        });

                        return;
                    }

                    let erro = false;

                    let Numero = $("#NumeroCartao").val();
                    let Titulo = $("#TituloCartao").val();
                    let Data = $("#DataCartao").val();
                    let CVV = $("#CVVCartao").val();
                    let CPF = $("#CPFCartao").val();
                    let CodigoVendedor = $("#CodigoVendedor").val();

                    if (!Numero) {
                        $("#ErroNumero").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#ErroNumero").css("display", "none");
                    }


                    if (!Titulo) {
                        $("#ErroTitulo").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#ErroTitulo").css("display", "none");
                    }


                    if (!Data) {
                        $("#ErroData").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#ErroData").css("display", "none");
                    }

                    if (!CVV) {
                        $("#ErroCVV").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#ErroCVV").css("display", "none");
                    }

                    if (!CPF) {
                        $("#ErroCPF").css("display", "block");
                    }

                    else {
                        $("#ErroCPF").css("display", "none");
                    }


                    if (!erro) {

                        let DataFormatada = Data.split("/");
                        let CPFFormatado = CPF.replace(".", "").replace(".", "").replace("-", "");

                        let MesCartao = DataFormatada[0];
                        let AnoCartao = DataFormatada[1];

                        let BandeiraCartao = "";

                        var cards = {
                            visa: /^4[0-9]{12}(?:[0-9]{3})/,
                            mastercard: /^5[1-5][0-9]{14}/,
                            diners: /^3(?:0[0-5]|[68][0-9])[0-9]{11}/,
                            amex: /^3[47][0-9]{13}/,
                            discover: /^6(?:011|5[0-9]{2})[0-9]{12}/,
                            hipercard: /^(606282\d{10}(\d{3})?)|(3841\d{15})/,
                            elo: /^((((636368)|(438935)|(504175)|(451416)|(636297))\d{0,10})|((5067)|(4576)|(4011))\d{0,12})/,
                            jcb: /^(?:2131|1800|35\d{3})\d{11}/,
                            aura: /^(5078\d{2})(\d{2})(\d{11})$/
                        };

                        for (var flag in cards) {
                            if (cards[flag].test(Numero)) {
                                BandeiraCartao = flag;
                            }
                        }

                        window.Mercadopago.setPublishableKey("APP_USR-4f22958e-cccd-49ac-b52d-02ae9b9697a9");
                        window.Mercadopago.getIdentificationTypes();

                        let DadosCartao = {

                            cardNumber: Numero,
                            cardExpirationMonth: MesCartao,
                            cardExpirationYear: AnoCartao,
                            securityCode: CVV,
                            cardholderName: Titulo,
                            docType: "CPF",
                            docNumber: CPFFormatado

                        };


                        var hash = window.Mercadopago.createToken(DadosCartao, setCardTokenAndPay);

                        function setCardTokenAndPay(status, response) {
                            if (status == 200 || status == 201) {

                                let Usuario = "";

                                $.ajax({
                                    url: "@Url.Action("GetDadosUsuario", "Comprar")",
                                    method: "POST",
                                    data: { IdProduto: IdProduto },
                                    success: function (retorno) {
                                        Usuario = retorno;
                                    },
                                    complete: function () {


                                        let CodigoCartao = response.id;

                                        let Telefone = Usuario.Telefone;
                                        Telefone = Telefone.replace("(", "").replace(')', "");
                                        let TelefoneFormatado = Telefone.split(" ");

                                        let dados = JSON.stringify({
                                            token: CodigoCartao,
                                            installments: 1,
                                            transaction_amount: parseFloat(ValorTotalFormatado),
                                            description: "Bilhete EiSorteei - " + Usuario.NomeProduto,
                                            payment_method_id: BandeiraCartao,
                                            payer: {
                                                email: Usuario.Email,
                                                identification: {
                                                    number: CPFFormatado,
                                                    type: "CPF"
                                                }
                                            },
                                            notification_url: "https://www.suaurl.com/notificacoes/",
                                            sponsor_id: null,
                                            binary_mode: false,
                                            external_reference: "Bilhete " + Usuario.IdProduto,
                                            statement_descriptor: "Bilhete EiSorteei",
                                            additional_info: {
                                                items: [
                                                    {
                                                        id: "PR0001",
                                                        title: "Bilhete EiSorteei - Código do Produto: " + Usuario.IdProduto,
                                                        description: "Bilhete EiSorteei",
                                                        picture_url: "https://http2.mlstatic.com/resources/frontend/statics/growth-sellers-landings/device-mlb-point-i_medium@2x.png",
                                                        category_id: "Bilhete",
                                                        quantity: 1,
                                                        unit_price: Usuario.ValorRifa
                                                    }
                                                ],
                                                payer: {
                                                    first_name: Usuario.Nome,
                                                    last_name: Usuario.SobreNome,
                                                    address: {
                                                        zip_code: Usuario.CEP,
                                                        street_name: Usuario.Rua,
                                                        street_number: Usuario.Numero
                                                    },
                                                    registration_date: Usuario.DataCadastro,
                                                    phone: {
                                                        area_code: TelefoneFormatado[0],
                                                        number: TelefoneFormatado[1]
                                                    }
                                                },
                                                shipments: {
                                                    receiver_address: {
                                                        street_name: "Av. Alberane Cunha",
                                                        street_number: 81,
                                                        zip_code: "37350000",
                                                        city_name: "Liberdade",
                                                        state_name: "Minas Gerais"
                                                    }
                                                }
                                            }
                                        });


                                        $.ajax({
                                            url: "@Url.Action("VerificaBilhetes","Comprar")",
                                            method: 'POST',
                                            data: { Bilhetes: Bilhetes, IdProduto: IdProduto },
                                            success: function (retorno) {

                                                if (!retorno.Status) {

                                                    Swal.fire({
                                                        title: 'Boleto',
                                                        text: retorno.Mensagem,
                                                        icon: 'error',
                                                        showCancelButton: false,
                                                        confirmButtonColor: '#3085d6',
                                                        cancelButtonColor: '#d33',
                                                        cancelButtonText: 'Não',
                                                        confirmButtonText: 'OK'
                                                    });
                                                }

                                                else {

                                                    $.ajax({
                                                        url: "https://api.mercadopago.com/v1/payments",
                                                        method: 'POST',
                                                        beforeSend: function (xhr) {
                                                            xhr.setRequestHeader('Authorization', 'Bearer APP_USR-5017428128263404-072015-ddd04542ab6288891aebac5789addf33-247787081');
                                                        },
                                                        data: dados,
                                                        success: function (retorno) {

                                                            let CodigoVendedor = $("#CodigoVendedor").val();

                                                            if (retorno.status == "approved" || retorno.status == "in_process") {
                                                                $("#EfetuarPagamento").prop("disabled", "disabled");
                                                                $.ajax({
                                                                    url: "@Url.Action("CompraRealizada", "Comprar")",
                                                                    method: "POST",
                                                                    data: {
                                                                        Status: retorno.status,
                                                                        IdProduto: IdProduto,
                                                                        IdCompra: retorno.id,
                                                                        TipoPagamento: "Cartão de Crédito",
                                                                        CodigoVendedor: CodigoVendedor,
                                                                        Bilhetes: Bilhetes,
                                                                        UrlBoleto: "",
                                                                        OrderBumps: OrderBumpsEscolhidos,
                                                                        ValorCompra: ValorTotalFormatado
                                                                    },
                                                                    success: function (data) {


                                                                        if (data.Status) {

                                                                            if (retorno.status == "approved") {
                                                                                Swal.fire({
                                                                                    title: 'Pagamento Efetuado',
                                                                                    text: data.Mensagem,
                                                                                    icon: 'success',
                                                                                    showCancelButton: false,
                                                                                    confirmButtonColor: '#3085d6',
                                                                                    cancelButtonColor: '#d33',
                                                                                    cancelButtonText: 'Não',
                                                                                    confirmButtonText: 'OK'
                                                                                });
                                                                            }

                                                                            if (retorno.status == "in_process") {
                                                                                Swal.fire({
                                                                                    title: 'Pagamento em Análise',
                                                                                    text: data.Mensagem,
                                                                                    icon: 'success',
                                                                                    showCancelButton: false,
                                                                                    confirmButtonColor: '#3085d6',
                                                                                    cancelButtonColor: '#d33',
                                                                                    cancelButtonText: 'Não',
                                                                                    confirmButtonText: 'OK'
                                                                                });
                                                                            }
                                                                        }

                                                                    }
                                                                });
                                                            }

                                                            else {
                                                                Swal.fire({
                                                                    title: 'Pagamento não efetuado',
                                                                    text: "Seu pagamento não foi aceito, entre em contato com o distribuinte do seu cartão e tente novamente mais tarde.",
                                                                    icon: 'error',
                                                                    showCancelButton: false,
                                                                    confirmButtonColor: '#3085d6',
                                                                    cancelButtonColor: '#d33',
                                                                    cancelButtonText: 'Não',
                                                                    confirmButtonText: 'OK'
                                                                });
                                                            }
                                                        },
                                                        error: function (retorno) {

                                                            Swal.fire({
                                                                title: 'Cartão Inválido',
                                                                text: "Os dados do cartão informado não são inválidos, por favor verifique seus dados e tente novamente!",
                                                                icon: 'error',
                                                                showCancelButton: false,
                                                                confirmButtonColor: '#3085d6',
                                                                cancelButtonColor: '#d33',
                                                                cancelButtonText: 'Não',
                                                                confirmButtonText: 'OK'
                                                            });

                                                        }
                                                    });

                                                }

                                            }
                                        });


                                    }
                                });

                            }

                            else {
                                Swal.fire({
                                    title: 'Cartão Inválido',
                                    text: "Os dados do cartão informado não são inválidos, por favor verifique seus dados e tente novamente!",
                                    icon: 'error',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    cancelButtonText: 'Não',
                                    confirmButtonText: 'OK'
                                });
                            }
                        };
                    }

                });


                $("#FormaPagamentoBoleto").change(function () {

                    if ($(this).prop("checked")) {
                        TipoPagamento = "Boleto";
                        $("#TipoCartao").slideUp(200);
                        $("#TipoBoleto").slideDown(200);
                    }

                });

                $("#FormaPagamentoCartao").change(function () {

                    if ($(this).prop("checked")) {
                        TipoPagamento = "Cartão de Crédito";
                        $("#TipoCartao").slideDown(200);
                        $("#TipoBoleto").slideUp(200);
                    }

                });


                $("#RealizarCadastro").click(function () {

                    let erro = false;

                    let Nome = $("#NomeLogin").val();
                    let SobreNome = $("#SobreNomeLogin").val();
                    let Email = $("#EmailCadastrar").val();
                    let Telefone = $("#TelefoneLogin").val();
                    let CPF = $("#CPFLogin").val();
                    let Estado = $("#EstadoLogin").val();
                    let Cidade = $("#CidadeLogin").val();
                    let Bairro = $("#BairroLogin").val();
                    let CEP = $("#CEPLogin").val();
                    let Rua = $("#RuaLogin").val();
                    let Numero = $("#NumeroLogin").val();
                    let Senha = $("#SenhaCadastrar").val();
                    let Confirmar = $("#ConfirmarLogin").val();

                    if (!Nome) {
                        $("#NomeErro").text("Campo Obrigatório");
                        $("#NomeErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#NomeErro").css("display", "none");
                    }

                    if (!SobreNome) {
                        $("#SobreNomeErro").text("Campo Obrigatório");
                        $("#SobreNomeErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#SobreNomeErro").css("display", "none");
                    }

                    if (!Email) {
                        $("#EmailErro").text("Campo Obrigatório");
                        $("#EmailErro").css("display", "block");
                        erro = true;
                    }

                    else {

                        if (!validaEmail(Email)) {
                            $("#EmailErro").text("Email Inválido");
                            $("#EmailErro").css("display", "block");
                            erro = true;
                        }

                        else {
                            $("#EmailErro").css("display", "none");
                        }

                    }

                    if (!Telefone) {
                        $("#TelefoneErro").text("Campo Obrigatório");
                        $("#TelefoneErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#TelefoneErro").css("display", "none");
                    }

                    if (!CPF) {
                        $("#CPFErro").text("Campo Obrigatório");
                        $("#CPFErro").css("display", "block");
                        erro = true;
                    }

                    else {

                        if (!ValidaCPF(CPF)) {
                            $("#CPFErro").text("CPF Inválido");
                            $("#CPFErro").css("display", "block");
                            erro = true;
                        }

                        else {
                            $("#CPFErro").css("display", "none");
                        }

                    }

                    if (!Estado) {
                        $("#EstadoErro").text("Campo Obrigatório");
                        $("#EstadoErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#EstadoErro").css("display", "none");
                    }

                    if (!Cidade) {
                        $("#CidadeErro").text("Campo Obrigatório");
                        $("#CidadeErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#CidadeErro").css("display", "none");
                    }

                    if (!Bairro) {
                        $("#BairroErro").text("Campo Obrigatório");
                        $("#BairroErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#BairroErro").css("display", "none");
                    }

                    if (!CEP) {
                        $("#CEPErro").text("Campo Obrigatório");
                        $("#CEPErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#CEPErro").css("display", "none");
                    }

                    if (!Rua) {
                        $("#RuaErro").text("Campo Obrigatório");
                        $("#RuaErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#RuaErro").css("display", "none");
                    }

                    if (!Numero) {
                        $("#NumeroErro").text("Campo Obrigatório");
                        $("#NumeroErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#NumeroErro").css("display", "none")
                    }

                    if (!Senha) {
                        $("#SenhaErro").text("Campo Obrigatório");
                        $("#SenhaErro").css("display", "block");
                        erro = true;
                    }

                    else {
                        $("#SenhaErro").css("display", "none");
                    }

                    if (!Confirmar) {
                        $("#ConfirmarErro").text("Campo Obrigatório");
                        $("#ConfirmarErro").css("display", "block");
                        erro = true;
                    }

                    else {

                        if (Confirmar != Senha) {
                            $("#ConfirmarErro").text("As senha digitadas não correspondem");
                            $("#ConfirmarErro").css("display", "block");
                            erro = true;
                        }

                        else {
                            $("#ConfirmarErro").css("display", "none");
                        }
                    }

                    if (!erro) {


                        let data = {
                            Nome,
                            SobreNome,
                            Email,
                            Telefone,
                            CPF,
                            Estado,
                            Cidade,
                            Bairro,
                            CEP,
                            Rua,
                            Numero,
                            Senha,
                            Confirmar
                        };

                        $.ajax({

                            url: "@Url.Action("CadastrarUsuario","Comprar")",
                            method: "POST",
                            data: data,
                            success: function (retorno) {

                                if (retorno.Status) {

                                    $("#InformacoesPessoais").slideUp(200);
                                    $("#NomeLogado").text("Nome: " + retorno.NomeLogado);
                                    $("#EmailLogado").text("Email: " + retorno.EmailLogado);
                                    $("#TelefoneLogado").text("Telefone: " + retorno.TelefoneLogado);
                                    $("#CPFLogado").text("CPF: " + retorno.CPFLogado);
                                    $("#CEPLogado").text("CEP: " + retorno.CEPLogado);
                                    $("#EstadoLogado").text("Estado: " + retorno.EstadoLogado);
                                    $("#CidadeLogado").text("Cidade: " + retorno.CidadeLogado);
                                    $("#BairroLogado").text("Bairro: " + retorno.BairroLogado);
                                    $("#RuaLogado").text("Rua: " + retorno.RuaLogado);
                                    $("#NumeroLogado").text("Número: " + retorno.NumeroLogado);
                                    $("#UsuarioLogado").slideDown(200);
                                    $("#Pagamento").slideDown(200);

                                    $("#InformacoesPessoais").slideUp(200);
                                    $("#NomeLogado").text("Nome: " + retorno.NomeLogado);
                                    $("#EmailLogado").text("Email: " + retorno.EmailLogado);
                                    $("#TelefoneLogado").text("Telefone: " + retorno.TelefoneLogado);
                                    $("#CPFLogado").text("CPF: " + retorno.CPFLogado);
                                    $("#CEPLogado").text("CEP: " + retorno.CEPLogado);
                                    $("#EstadoLogado").text("Estado: " + retorno.EstadoLogado);
                                    $("#CidadeLogado").text("Cidade: " + retorno.CidadeLogado);
                                    $("#BairroLogado").text("Bairro: " + retorno.BairroLogado);
                                    $("#RuaLogado").text("Rua: " + retorno.RuaLogado);
                                    $("#NumeroLogado").text("Número: " + retorno.NumeroLogado);
                                    $("#DadosUsuario").slideDown(200);
                                    $("#Pagamento").slideDown(200);

                                    Swal.fire({
                                        title: 'Cadastrar realizado com sucesso!',
                                        text: "Estamos muito felizes de tê-lo conosco, continue suas compras e boa sorte.",
                                        icon: 'success',
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        cancelButtonText: 'Não',
                                        confirmButtonText: 'OK'
                                    });
                                }

                                else {

                                    if (retorno.Mensagem.includes('Email')) {
                                        $("#EmailErro").text(retorno.Mensagem);
                                        $("#EmailErro").css("display", "block");
                                    }

                                    else if (retorno.Mensagem.includes('CPF')) {
                                        $("#CPFErro").text(retorno.Mensagem);
                                        $("#CPFErro").css("display", "block");
                                    }

                                }

                            }

                        });

                    }

                });

                function ValidaCPF(cpf) {
                    cpf = cpf.replace(/[^\d]+/g, '');
                    if (cpf == '') return false;

                    if (cpf.length != 11 ||
                        cpf == "00000000000" ||
                        cpf == "11111111111" ||
                        cpf == "22222222222" ||
                        cpf == "33333333333" ||
                        cpf == "44444444444" ||
                        cpf == "55555555555" ||
                        cpf == "66666666666" ||
                        cpf == "77777777777" ||
                        cpf == "88888888888" ||
                        cpf == "99999999999")
                        return false;

                    add = 0;
                    for (i = 0; i < 9; i++)
                        add += parseInt(cpf.charAt(i)) * (10 - i);
                    rev = 11 - (add % 11);
                    if (rev == 10 || rev == 11)
                        rev = 0;
                    if (rev != parseInt(cpf.charAt(9)))
                        return false;

                    add = 0;
                    for (i = 0; i < 10; i++)
                        add += parseInt(cpf.charAt(i)) * (11 - i);
                    rev = 11 - (add % 11);
                    if (rev == 10 || rev == 11)
                        rev = 0;
                    if (rev != parseInt(cpf.charAt(10)))
                        return false;
                    return true;
                }


                function validaEmail(email) {
                    var regex = /^([\w-]+(?:\.[\w-]+)*)@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
                    return regex.test(email);
                }



            });

            $("#CEPLogin").keyup(function () {

                let Value = $(this).val();

                if (Value.length == 9) {

                    $.ajax({

                        url: "@Url.Action("GetLocation","Vendedor")",
                        method: "POST",
                        data: { CEP: Value },
                        success: function (response) {

                            $("#CidadeLogin").val(response.localidade);
                            $("#BairroLogin").val(response.bairro);
                            $("#RuaLogin").val(response.logradouro);

                            if (response.uf == "MG") {
                                $("#EstadoLogin").val("Minas Gerais");
                            }

                            else if (response.uf == "RJ") {
                                $("#EstadoLogin").val("Rio de Janeiro");
                            }

                            else if (response.uf == "SP") {
                                $("#EstadoLogin").val("São Paulo");
                            }

                        },
                        error: function (response) {
                            console.log(response);
                        }

                    });

                }

            });

        </script>
</body>

</html>




